
Promise:
    Apromise is a special javascript object that represents the eventual completion(or failure) 
    of an asynchronous operation.

    //Three states
    1. Pending : inintial state, promise is still waiting for the operation to finish.
    2. Fulfilled : The operation is completed successfully 
    3. Rejected : The operation failed.

    To create a new promise : new Promise();
    The promise constructor takes a function with two paramaters : 
      Resolve - To mark as the promise is successful
      Reject - To mark it as failed
    
    //Handling:
    .then() method is called when the promise is fulfilled.
    --It recieves the result from resolve();
    .catch() method is called when the promise is Rejected
    --It recieves the result from the Reject();
        let myPromise=new Promise((resolve,reject)=>{
            let success=true 
            if (success){
                resolve("The operation was successful")
            } else{
                reject("The operation was failed")
            }
        });
        myPromise
        .then(result=>{
            console.log(result)
        })
        .catch(error=>{
            console.log(error)
        })

  promise with setTimeout:
        let myPromise=new Promise((resolve,reject)=>{setTimeout(()=>{
            let success=true 
            if (success){
                resolve("The operation was successful")
            } else{
                reject("The operation was failed")
            }
          },5000);
        });
        console.log("Executing myPromise...");
        myPromise
        .then(result=>{
            console.log(result)
        })
        .catch(error=>{
            console.log(error)
        });
